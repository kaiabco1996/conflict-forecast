import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.8.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.8.20'
}

group = 'aero.airlab.challenge'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	maven {
		url = uri("https://repo.osgeo.org/repository/release")
	}
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.projectreactor.kotlin:reactor-kotlin-extensions'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-reactor'
	implementation 'io.github.oshai:kotlin-logging-jvm:5.1.0'

	implementation "org.geotools:gt-shapefile:${geotools_version}"
	implementation "org.geotools:gt-geojson:${geotools_version}"
	implementation "org.geotools:gt-epsg-hsql:${geotools_version}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation "io.kotest:kotest-assertions-core:${kotest_version}"
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"
	testImplementation "io.mockk:mockk:1.12.0"
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
